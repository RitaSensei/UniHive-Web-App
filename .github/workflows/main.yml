name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:19.03.12
        options: --privileged

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.CI_REGISTRY_USER }}
          password: ${{ secrets.CI_REGISTRY_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.CI_REGISTRY_IMAGE }}:${{ github.sha }} .

      - name: Run temporary container
        run: docker run --name temp-container -d ${{ secrets.CI_REGISTRY_IMAGE }}:${{ github.sha }}
        
      - name: List files in temp-container
        run: docker exec temp-container ls /app/static
        
      - name: Create build artifacts directories
        run: |
            mkdir -p build-artifacts/frontend
            mkdir -p build-artifacts/backend
  
      - name: Copy frontend build artifacts
        run: docker cp temp-container:app/static ./build-artifacts/frontend

      - name: Copy backend build artifacts
        run: docker cp temp-container:app/app.jar ./build-artifacts/backend

      - name: Remove temporary container
        run: docker rm temp-container

      - name: Remove Docker image
        run: docker rmi ${{ secrets.CI_REGISTRY_IMAGE }}:${{ github.sha }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: build-artifacts

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifacts
          path: build-artifacts

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl bash nodejs npm git

      - name: Install Heroku CLI
        run: curl https://cli-assets.heroku.com/install.sh | sh

      - name: Log in to Heroku Container Registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_PRODUCTION_KEY }}
        run: echo "$HEROKU_API_KEY" | docker login --username=_ --password-stdin registry.heroku.com

      - name: Build and push Docker image to Heroku
        run: |
          docker buildx build -t registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web build-artifacts
          docker push registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web

      - name: Release Docker image to Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_PRODUCTION_KEY }}
        run: heroku container:release web --app ${{ secrets.HEROKU_APP_NAME }}
